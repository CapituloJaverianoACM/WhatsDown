import { Component } from '@angular/core';
import { IonicPage, NavController, NavParams } from 'ionic-angular';
import { Validators, FormBuilder, FormGroup } from '@angular/forms';
import { RegisterPage} from '../register/register';
import { UserProvider } from '../../providers/user/user';
import { AlertController } from 'ionic-angular';
import { TabsPage } from '../tabs/tabs';

/**
 * Generated class for the LoginPage page.
 *
 * See http://ionicframework.com/docs/components/#navigation for more info
 * on Ionic pages and navigation.
 */
@IonicPage()
@Component({
  selector: 'page-login',
  templateUrl: 'login.html',
})
export class LoginPage {

  loginForm: FormGroup;

  constructor(
    public navCtrl: NavController,
    public navParams: NavParams,
    private userProvider: UserProvider,
    private alertCtrl: AlertController,
    private formBuilder: FormBuilder) {

    this.loginForm = this.formBuilder.group({
      username: ['', [
        Validators.required,
        Validators.minLength(6),
        Validators.maxLength(20)
        ]
      ],
      password: ['', [
          Validators.required,
          Validators.minLength(7),
          Validators.maxLength(20)
        ]
      ]
    });
  }

  ionViewDidLoad() {
    console.log('ionViewDidLoad LoginPage');
  }

  /**
    * Displays an alert based on the error's message.
    * @param {any} errmess JSON with error generated by the API.
    */
  loginErrorHandler(errmess: any) {
    console.log(errmess);
    let registerErrorAlert = this.alertCtrl.create({
      title: 'Ups...',
      subTitle: errmess.message,
      buttons: ['Dismiss']
    });
    registerErrorAlert.present();
  }

  onSubmit() {
    let userCredentials = this.loginForm.value;
    this.userProvider.loginUser(userCredentials)
    .subscribe((resp) => {
      console.log(resp);
      if(resp.status === 200) {
        let registerSuccessAlert = this.alertCtrl.create({
          title: 'Yay!',
          subTitle: 'Login succesfull.',
          buttons: ['Dismiss']
        });
        this.userProvider.setCurrentLogedInUsername(userCredentials.username);
        registerSuccessAlert.present();
        this.navCtrl.setRoot(TabsPage);
      }
    },
    errmess => this.loginErrorHandler(errmess) );
  }

  onCreateNewAccount() {
    this.navCtrl.push(RegisterPage);
  }

}
